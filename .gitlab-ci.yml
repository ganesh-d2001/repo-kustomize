image: docker:20.10

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always

services:
  - docker:20.10-dind

variables:
  DOCKER_IMAGE: "${CI_COMMIT_SHA}"

stages:
  # - build
  - update

# Docker_push:
#   stage: build
#   script:
#     - echo "Building Docker image"
#     - docker build -t ganeshd2532/prod_data:$DOCKER_IMAGE .
#     - echo "Logging into Docker Hub"
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker push ganeshd2532/prod_data:$DOCKER_IMAGE

Update_Manifest:
  stage: update

  before_script:
    - apk add --no-cache git openssh-client=9.3_p1-r3 openssh-client-common=9.3_p1-r3
    - git config --global user.email "ganeshd@devtools.in"
    - git config --global user.name "ganeshd1"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts

  script:

    - echo "Cloning the application repository"
    - git clone $CI_REPOSITORY_URL 
    - cd Yaml-files
    - echo "Updating deployment file with new Docker image tag"
    - |
      DEPLOYMENT_FILE="prod-app.yaml"
      sed -i "s|image: ganeshd2532/prod_data:.*|image: ganeshd2532/prod_data:${DOCKER_IMAGE}|g" "${DEPLOYMENT_FILE}"
    - echo "Committing and pushing changes"
    - git add "${DEPLOYMENT_FILE}"
    - git commit -m "Updated image to ${DOCKER_IMAGE}"
    - git push origin master

  only:
    - master