image: docker:20.10

workflow:
  rules:
    # Run the pipeline only for normal commits to master, not for CI-generated commits
    - if: '$CI_COMMIT_BRANCH == "test" && $CI_COMMIT_MESSAGE !~ /Test-CI-generated commit/'
      when: always

services:
  - docker:20.10-dind

variables:
  DOCKER_IMAGE: "${CI_COMMIT_SHA}"

stages:
  - build
  - update

Docker_push:
  stage: build
  script:
    - echo "Building Docker image"
    - docker build -t ganeshd2532/prod_data:$DOCKER_IMAGE .
    - echo "Logging into Docker Hub"
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push ganeshd2532/prod_data:$DOCKER_IMAGE

Update_Manifest:
  stage: update
  before_script:
    - apk add --no-cache git openssh-client
    - git config --global user.email "ganeshd@devtools.in"
    - git config --global user.name "ganeshd1"
    - git config --global url."https://ganeshd1:$CI_ACCESS_TOKEN@gitlab.com".insteadOf "https://gitlab.com"

  script:
    # Clone the repository and update the image tag
    - echo "Cloning the application repository."
    - git clone https://gitlab.com/my-first-grp7622121/Implementation.git
    - cd Implementation/Yaml-files
    - git checkout test
    - echo "Updating deployment file with new Docker Test image tag"
    - |
      DEPLOYMENT_FILE="prod-app.yaml"
      sed -i "s|image: ganeshd2532/prod_data:.*|image: ganeshd2532/prod_data:${DOCKER_IMAGE}|g" "${DEPLOYMENT_FILE}"
    - echo "Committing and pushing changes"
    - git add "${DEPLOYMENT_FILE}"
    - git commit -m "Test-CI-generated commit:Updated image to ${DOCKER_IMAGE}"
    - git push https://gitlab.com/my-first-grp7622121/Implementation.git

  only:
    - test
  except:
    - $CI_COMMIT_MESSAGE =~ /Test-CI-generated commit/
